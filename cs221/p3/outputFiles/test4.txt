search
tree
is
an
appropriate
structure
for
many
of
the
same
applications
discussed
previously
in
conjunction
with
other
sorted
list
structures
the
special
advantage
of
using
search
tree
is
that
it
facilitates
searching
while
conferring
the
of
linking
the
elements
it
provides
the
features
of
the
sorted
arraybased
list
and
the
linked
list
like
sorted
arraybased
list
it
can
search
quickly
using
search
tree
like
linked
list
it
allows
insertions
and
deletions
without
having
to
move
data
thus
this
structure
is
particularly
suitable
for
applications
in
which
search
time
must
minimized
or
in
which
the
nodes
are
not
necessarily
processed
in
sequential
order
as
usual
tradeoff
exists
the
search
tree
with
its
extra
pointer
in
each
node
takes
up
more
memory
space
than
singly
linked
list
does
in
addition
the
algorithms
for
manipulating
the
tree
are
somewhat
more
complicated
if
all
of
the
lists
uses
involve
sequential
rather
than
random
processing
of
the
elements
the
tree
may
not
as
good
as
linked
list
suppose
we
have
customer
records
in
list
if
our
main
activity
is
to
send
out
updated
monthly
statements
to
the
customers
and
if
the
order
in
which
the
statements
are
printed
matches
the
order
in
which
the
records
appear
on
the
list
linked
list
would
suitable
but
suppose
we
decide
to
keep
terminal
available
to
give
out
information
to
the
customers
whenever
they
ask
if
the
data
are
kept
in
linked
list
the
first
customer
on
the
list
can
given
information
almost
instantly
but
the
last
customer
has
to
wait
while
the
application
examines
the
other
records
when
direct
to
the
records
is
requirement
search
tree
represents
more
appropriate
structure
